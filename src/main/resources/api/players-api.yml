openapi: 3.0.1
info:
  title: Borbah API
  version: v1
servers:
  - url: http://localhost/v1
paths:
  /players:
    get:
      summary: Return all player's for the given battle id
      description: Return all player's for the given battle id
      operationId: findPlayerByBattleId
      parameters:
        - name: battle
          in: query
          description: battle's id
          required: true
          schema:
            type: string
        - name: sortAsc
            in: query
            description: Should the players be sort in score ascending order
            required: false
            schema:
              type: boolean
      responses:
        200:
          description: Array of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerDto'

    post:
      summary: Create Player with name login
      description: Create Player with name loginPlayer
      operationId: createPlayer
      parameters:
        - name: login
          in: query
          description: player's login
          required: true
          schema:
            type: string
        - name: battle
          in: query
          description: the battle id to join
          required: true
          schema:
            type: string
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: string

    delete:
      summary: Delete all players
      description: Delete all players
      operationId: deletePlayers
      responses:
        200:
          description: Delete all players from all battles
          content:
            application/json:
              schema:
                type: string

  /players/{idPlayer}:
    get:
      summary: Return all informations about a player
      description: Return all informations about a player
      operationId: viewPlayer
      parameters:
        - name: idPlayer
          in: path
          description: player's id
          required: true
          schema:
            type: string
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDto'

components:
  schemas:
    PlayerDto:
      type: object
      properties:
        idPlayer:
          type: string
          description: Player's id
        login:
          type: string
          description: Player's login
        score:
          type: integer
          description: Player's score
        lastUpdate:
          type: string
          description: Player' score last update
          format: date-time
      description: Player modelisation
